{"version":3,"sources":["images/logoS.png","images/tie.jpeg","images/grill-time-screenshot.png","images/source-code.png","images/work-link.png","images/git.png","images/linkedin.png","images/insta.png","images/youtube.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","useState","scroll","setScroll","navHeight","document","getElementsByClassName","headerHeight","isLoading","toggleLoading","status","setStatus","contactBtn","useEffect","addEventListener","scrollCheck","window","scrollY","className","id","offsetTop","clientHeight","src","require","alt","style","display","background","flexDirection","width","paddingLeft","color","alignSelf","borderBottom","letterSpacing","margin","paddingBottom","textShadow","fontSize","href","fontStyle","onClick","open","onSubmit","e","preventDefault","emailjs","sendForm","target","then","result","error","for","type","name","required","value","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.6d58f1fe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logoS.bc58887a.png\";","module.exports = __webpack_public_path__ + \"static/media/tie.d3e638c9.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/grill-time-screenshot.d81d1873.png\";","module.exports = __webpack_public_path__ + \"static/media/source-code.1607a3a7.png\";","module.exports = __webpack_public_path__ + \"static/media/work-link.e0421520.png\";","module.exports = __webpack_public_path__ + \"static/media/git.6e5b96ae.png\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.fc9ef9d4.png\";","module.exports = __webpack_public_path__ + \"static/media/insta.ab1ec42e.png\";","module.exports = __webpack_public_path__ + \"static/media/youtube.fe7c712e.png\";","import React, { useEffect, useState } from \"react\";\nimport emailjs from \"emailjs-com\";\nimport \"./App.css\";\n\nfunction App() {\n  const [scroll, setScroll] = useState(0);\n  const navHeight = document.getElementsByClassName(\"nav\");\n  const headerHeight = document.getElementsByClassName(\"topHeader\");\n  // const width = window.innerWidth + 10;\n  const [isLoading, toggleLoading] = useState(false);\n  const [status, setStatus] = useState(null);\n\n  const sendEmail = (e) => {\n    e.preventDefault();\n    // console.log(e.target);\n    toggleLoading(true);\n\n    emailjs\n      .sendForm(\n        \"gmail\",\n        \"template_TWfqH4kG\",\n        e.target,\n        \"user_tkYbcE8ZVidAQ6NYcoDse\"\n      )\n      .then(\n        (result) => {\n          setStatus(\"Sent!\");\n          // console.log(result.text);\n        },\n        (error) => {\n          setStatus(\"Sorry - Try Again\");\n          // console.log(error.text);\n        }\n      );\n  };\n\n  const contactBtn = status ? status : isLoading ? \"Sending...\" : \"Send\";\n\n  useEffect(() => {\n    document.addEventListener(\"scroll\", () => {\n      const scrollCheck = window.scrollY;\n      if (scrollCheck !== scroll) {\n        setScroll(scrollCheck);\n      }\n    });\n  });\n\n  return (\n    <div className=\"App\">\n      <div className=\"jumbotron\">\n        <div\n          className=\"topHeader\"\n          id={\n            scroll === 0\n              ? \"transparent\"\n              : scroll > navHeight[0].offsetTop - headerHeight[0].clientHeight\n              ? \"static\"\n              : null\n          }\n        >\n          <div className=\"logo\">\n            <img src={require(\"./images/logoS.png\")} alt=\"logo\" />\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              background: \"transparent\",\n              flexDirection: \"column\",\n              width: \"130px\",\n              paddingLeft: \".2em\",\n              color: \"white\",\n            }}\n          >\n            <span\n              style={{\n                alignSelf: \"center\",\n                borderBottom: \"1.8px solid white\",\n                letterSpacing: \".05em\",\n                margin: \".6em 0\",\n                width: \"100%\",\n                color: \"white\",\n                paddingBottom: \"3px\",\n                textShadow: \"1px 1px 3px rgb(20,20,20)\",\n                // fontWeight: \"bold\",\n              }}\n            >\n              Alberto Ortega\n            </span>\n            <span\n              style={{\n                fontSize: \".83em\",\n                // letterSpacing: \"1px\",\n                textShadow: \"1px 1px 3px rgb(20,20,20)\",\n                // fontWeight: \"bold\",\n              }}\n            >\n              Full Stack Web Developer\n            </span>\n          </div>\n        </div>\n        <div className=\"welcome\">\n          <div>Welcome</div>\n        </div>\n      </div>\n      <div className=\"main\">\n        <div className=\"nav\">\n          <a href=\"#about\">About</a>\n          <a href=\"#portfolio\">Portfolio</a>\n          <a href=\"#contact\">Contact</a>\n        </div>\n        <div className=\"content\" id=\"about\">\n          <div className=\"about\">\n            <div className=\"aboutMe\">\n              <h2>About Me</h2>\n              <img\n                src={require(\"./images/tie.jpeg\")}\n                alt=\"profile pic\"\n                id=\"profilePic\"\n              />\n              <p>\n                My name is Alberto Ortega and I graduated from Texas Christian\n                University in 2020 with aspirations of becoming a Software\n                Developer. I constantly seek discomfort and am always pushing to\n                better myself in all aspects of life. My knack for problem\n                solving and fascination with technology has led me to computer\n                programming. When I'm not writing code, I enjoy spending time\n                being active. I like to be out on the water surfing,\n                wakeboarding, or even just swimming. When I'm not on the water,\n                I love to practice brazilian jiu-jitsu and hope to compete one\n                day. Einstein said it best:{\" \"}\n                <span style={{ fontStyle: \"italic\" }}>\n                  “I have no special talent. I am only passionately curious.”\n                </span>\n              </p>\n            </div>\n            <div className=\"skills\">\n              <h3>Skills</h3>\n              <ul>\n                <li>\n                  <span id=\"skills\">Languages: </span>Javascript, Python, Java\n                </li>\n                <li>\n                  <span id=\"skills\">Front End: </span>React, jQuery, HTML5/CSS3,\n                  Bootstrap, JSON, SASS/SCSS\n                </li>\n                <li>\n                  <span id=\"skills\">Back End: </span>NodeJS, SQL, MySQL,\n                  MongoDB, GraphQL\n                </li>\n                <li>\n                  <span id=\"skills\">Other Skills | Tools: </span>Git, AWS,\n                  OAuth, npm, WordPress\n                </li>\n              </ul>\n            </div>\n          </div>\n          <div className=\"work\" id=\"portfolio\">\n            <h2>Work</h2>\n            <div className=\"work-content\">\n              <img\n                src={require(\"./images/grill-time-screenshot.png\")}\n                alt=\"grill-time-app\"\n              />\n              <div>\n                <span className=\"app-name\">Grill Time Calculator</span>\n                <p>\n                  A fully responsive web app that calculates estimated grilling\n                  time based on user input such as type of meat, size, and\n                  whether the grill is electric, gas or charcoal.\n                </p>\n                <p>\n                  <span className=\"tech-used\">Technologies used:</span>{\" \"}\n                  JavaScript(ES6), React, CSS3, Flexbox & Grid, HTML5, npm, git\n                </p>\n                <div className=\"work-link-images\">\n                  <img\n                    className=\"source-code\"\n                    src={require(\"./images/source-code.png\")}\n                    alt=\"git-source-code\"\n                    onClick={() =>\n                      window.open(\n                        \"https://github.com/teg1776/grill-time\",\n                        \"_blank\"\n                      )\n                    }\n                  />\n                  <img\n                    className=\"work-link\"\n                    alt=\"work-link\"\n                    onClick={() =>\n                      window.open(\n                        \"https://teg1776.github.io/grill-time/\",\n                        \"_blank\"\n                      )\n                    }\n                    src={require(\"./images/work-link.png\")}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"contact\" id=\"contact\">\n            <h2>Contact</h2>\n            <form onSubmit={sendEmail}>\n              <label for=\"email\">Email:</label>\n              <input type=\"text\" id=\"email\" name=\"from_email\" required />\n              <br />\n              <label for=\"subject\">Subject:</label>\n              <input type=\"text\" id=\"subject\" name=\"subject\" />\n              <br />\n              <label for=\"message\">Message:</label>\n              <textarea name=\"message\" required></textarea>\n              <br />\n              <input type=\"submit\" id=\"submit\" value={contactBtn} />\n            </form>\n          </div>\n          <div className=\"links\">\n            <div>\n              <img\n                src={require(\"./images/git.png\")}\n                alt=\"github\"\n                onClick={() =>\n                  window.open(\"https://github.com/teg1776\", \"_blank\")\n                }\n              />\n              <img\n                src={require(\"./images/linkedin.png\")}\n                alt=\"linkedin\"\n                onClick={() =>\n                  window.open(\"https://www.linkedin.com/in/teg1776/\", \"_blank\")\n                }\n              />\n              <img\n                src={require(\"./images/insta.png\")}\n                alt=\"instagram\"\n                onClick={() =>\n                  window.open(\n                    \"https://www.instagram.com/o_r_t_e_g_a/\",\n                    \"_blank\"\n                  )\n                }\n              />\n              <img\n                src={require(\"./images/youtube.png\")}\n                alt=\"youtube\"\n                onClick={() =>\n                  window.open(\n                    \"https://www.youtube.com/channel/UCzZWNSKH9XaRY1NzaQ0okNQ?view_as=subscriber\",\n                    \"_blank\"\n                  )\n                }\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}